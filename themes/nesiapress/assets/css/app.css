/* Tailwind
--------------------------------------------- */

/* ! tailwindcss v3.2.0 | MIT License | https://tailwindcss.com */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: SF Compact, ui-sans-serif;
  /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

[type='text'],[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  border-radius: 0px;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-shadow: 0 0 #0000;
}

[type='text']:focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  border-color: #2563eb;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  color: #6b7280;
  opacity: 1;
}

input::placeholder,textarea::placeholder {
  color: #6b7280;
  opacity: 1;
}

::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

::-webkit-date-and-time-value {
  min-height: 1.5em;
}

::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {
  padding-top: 0;
  padding-bottom: 0;
}

select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}

[multiple] {
  background-image: initial;
  background-position: initial;
  background-repeat: unset;
  background-size: initial;
  padding-right: 0.75rem;
  -webkit-print-color-adjust: unset;
          print-color-adjust: unset;
}

[type='checkbox'],[type='radio'] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding: 0;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
  display: inline-block;
  vertical-align: middle;
  background-origin: border-box;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-shrink: 0;
  height: 1rem;
  width: 1rem;
  color: #2563eb;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  --tw-shadow: 0 0 #0000;
}

[type='checkbox'] {
  border-radius: 0px;
}

[type='radio'] {
  border-radius: 100%;
}

[type='checkbox']:focus,[type='radio']:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

[type='checkbox']:checked,[type='radio']:checked {
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}

[type='radio']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
}

[type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='checkbox']:indeterminate {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='file'] {
  background: unset;
  border-color: inherit;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-size: unset;
  line-height: inherit;
}

[type='file']:focus {
  outline: 1px solid ButtonText;
  outline: 1px auto -webkit-focus-ring-color;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
  padding-right: 1rem;
  padding-left: 1rem;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
    padding-right: 2rem;
    padding-left: 2rem;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
    padding-right: 0rem;
    padding-left: 0rem;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.prose-lg {
  font-size: 1.125rem;
  line-height: 1.7777778;
}

.prose-lg :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}

.prose-lg :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  font-size: 1.2222222em;
  line-height: 1.4545455;
  margin-top: 1.0909091em;
  margin-bottom: 1.0909091em;
}

.prose-lg :where(blockquote):not(:where([class~="not-prose"] *)) {
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  padding-left: 1em;
}

.prose-lg :where(h1):not(:where([class~="not-prose"] *)) {
  font-size: 2.6666667em;
  margin-top: 0;
  margin-bottom: 0.8333333em;
  line-height: 1;
}

.prose-lg :where(h2):not(:where([class~="not-prose"] *)) {
  font-size: 1.6666667em;
  margin-top: 1.8666667em;
  margin-bottom: 1.0666667em;
  line-height: 1.3333333;
}

.prose-lg :where(h3):not(:where([class~="not-prose"] *)) {
  font-size: 1.3333333em;
  margin-top: 1.6666667em;
  margin-bottom: 0.6666667em;
  line-height: 1.5;
}

.prose-lg :where(h4):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.prose-lg :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.prose-lg :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.prose-lg :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.prose-lg :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-lg :where(figcaption):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
  margin-top: 1em;
}

.prose-lg :where(code):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
}

.prose-lg :where(h2 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.8666667em;
}

.prose-lg :where(h3 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.875em;
}

.prose-lg :where(pre):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.75;
  margin-top: 2em;
  margin-bottom: 2em;
  border-radius: 0.375rem;
  padding-top: 1em;
  padding-right: 1.5em;
  padding-bottom: 1em;
  padding-left: 1.5em;
}

.prose-lg :where(ol):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.prose-lg :where(ul):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.prose-lg :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.6666667em;
  margin-bottom: 0.6666667em;
}

.prose-lg :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.prose-lg :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.prose-lg :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-lg :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-lg :where(hr):not(:where([class~="not-prose"] *)) {
  margin-top: 3.1111111em;
  margin-bottom: 3.1111111em;
}

.prose-lg :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg :where(table):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
}

.prose-lg :where(thead th):not(:where([class~="not-prose"] *)) {
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.prose-lg :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose-lg :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose-lg :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.75em;
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.prose-lg :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose-lg :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose-lg :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.visible {
  visibility: visible;
}

.collapse {
  visibility: collapse;
}

.absolute {
  position: absolute;
}

.ml-3 {
  margin-left: 0.75rem;
}

.block {
  display: block;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.h-5 {
  height: 1.25rem;
}

.h-12 {
  height: 3rem;
}

.w-5 {
  width: 1.25rem;
}

.w-12 {
  width: 3rem;
}

.list-disc {
  list-style-type: disc;
}

.list-decimal {
  list-style-type: decimal;
}

.text-sm {
  font-size: .875rem;
}

.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

.text-emerald-500 {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.alignfull {
  margin: 0.5rem calc(50% - 50vw);
  max-width: 100vw;
  width: 100vw;
}

.alignwide {
  margin-left: -4rem;
  margin-right: -4rem;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  max-width: 1280px;
}

.alignnone {
  margin-left: 0px;
  margin-right: 0px;
  height: auto;
  max-width: 100%;
}

.aligncenter {
  margin: 0.5rem auto;
  display: block;
}

@media (min-width: 640px) {
  .alignleft:not(.wp-block-button) {
    margin-right: 0.5rem;
    float: left;
  }

  .alignright:not(.wp-block-button) {
    margin-left: 0.5rem;
    float: right;
  }

  .wp-block-button.alignleft a {
    float: left;
    margin-right: 1rem;
  }

  .wp-block-button.alignright a {
    float: right;
    margin-left: 1rem;
  }
}

.wp-caption {
  display: inline-block;
}

.wp-caption img {
  margin-bottom: 0.5rem;
  line-height: 1;
}

.wp-caption-text {
  font-size: .;
  color: #4b5563;
}

/* NesiaPress Block Editor
--------------------------------------------- */

.entry-content, .block-editor-block-list__layout {
  h1 {
    font-size: 1.5rem;
  }
  h2 {
    font-size: 1.25rem;
  }
  h3 {
    font-size: 1.125rem;
  }
  p, ul, ol {
    a {
      --tw-text-opacity: 1;
      color: rgb(16 185 129 / var(--tw-text-opacity));
    }
    a {
      text-decoration-line: underline;
    }
    a {
      &:hover {
        text-decoration-line: none;
      }
    }
  }
  p, ul, ol {
    margin-bottom: 2rem;
  }
  ul {
    li {
      list-style-position: inside;
    }
    li {
      list-style-type: disc;
    }
  }
  ol {
    li {
      list-style-position: inside;
    }
    li {
      list-style-type: decimal;
    }
  }
}

/* NesiaPress Layout
--------------------------------------------- */

.site {
  display: flex;
  min-height: 100vh;
  flex-direction: column;
}

.page-description {
  margin-left: auto;
  margin-right: auto;
  margin-top: 0.75rem;
  max-width: 42rem;
}

@media (min-width: 640px) {
  .page-description {
    margin-top: 1rem;
  }
}

.page-header {
  margin-bottom: 3rem;
  text-align: center;
}

.page-title {
  font-size: 1.875rem;
  font-weight: 600;
  letter-spacing: -0.025em;
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .page-title {
    font-size: 2.25rem;
  }
}

.archive-description {
  margin-left: auto;
  margin-right: auto;
  margin-top: 0.75rem;
  max-width: 42rem;
}

@media (min-width: 640px) {
  .archive-description {
    margin-top: 1rem;
  }
}

.archive-description p {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.archive-description p :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.archive-description p :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.archive-description p :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.archive-description p :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.archive-description p :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.archive-description p :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.archive-description p :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.archive-description p :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.archive-description p :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.archive-description p :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.archive-description p :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.archive-description p :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.archive-description p :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.archive-description p :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.archive-description p :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.archive-description p :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.archive-description p :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.archive-description p :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.archive-description p :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.archive-description p :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.archive-description p :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.archive-description p :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.archive-description p :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.archive-description p :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.archive-description p :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.archive-description p :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.archive-description p :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.archive-description p :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.archive-description p :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.archive-description p :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.archive-description p :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.archive-description p :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.archive-description p :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.archive-description p :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.archive-description p :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.archive-description p :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.archive-description p :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.archive-description p :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.archive-description p :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.archive-description p :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.archive-description p :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.archive-description p :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.archive-description p :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.archive-description p :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.archive-description p :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.archive-description p :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.archive-description p :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.archive-description p :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.archive-description p :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.archive-description p :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.archive-description p :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.archive-description p :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.archive-description p :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.archive-description p :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.archive-description p :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.archive-description p :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.archive-description p {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.archive-description p :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.archive-description p :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.archive-description p :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.archive-description p :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.archive-description p :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.archive-description p :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.archive-description p :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.archive-description p :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.archive-description p :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.archive-description p :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.archive-description p :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.archive-description p :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.archive-description p :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.archive-description p :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.archive-description p :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.archive-description p :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.archive-description p :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.archive-description p :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.archive-description p :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.archive-description p :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.archive-description p :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.archive-description p :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.archive-description p :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-sm :where(.archive-description p > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(.archive-description p > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.archive-description p > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.archive-description p > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.archive-description p > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.archive-description p > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm :where(.archive-description p > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-base :where(.archive-description p > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose-base :where(.archive-description p > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.archive-description p > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.archive-description p > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.archive-description p > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.archive-description p > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-base :where(.archive-description p > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-lg :where(.archive-description p > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-lg :where(.archive-description p > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.archive-description p > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.archive-description p > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.archive-description p > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.archive-description p > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg :where(.archive-description p > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-xl :where(.archive-description p > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8em;
  margin-bottom: 0.8em;
}

.prose-xl :where(.archive-description p > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.archive-description p > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.archive-description p > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.archive-description p > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.archive-description p > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-xl :where(.archive-description p > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-2xl :where(.archive-description p > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8333333em;
  margin-bottom: 0.8333333em;
}

.prose-2xl :where(.archive-description p > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.archive-description p > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.archive-description p > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.archive-description p > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.archive-description p > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-2xl :where(.archive-description p > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.archive-description p {
  font-size: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.np-author-page-description {
  font-size: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.np-page-gravatar {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1rem;
  display: flex;
  justify-content: center;
}

.np-page-gravatar img.avatar {
  height: 5rem;
  width: 5rem;
  border-radius: 9999px;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(16 185 129 / var(--tw-ring-opacity));
  --tw-ring-offset-width: 2px;
}

.np-author-page-info {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.np-author-page-info :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.np-author-page-info :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.np-author-page-info :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.np-author-page-info :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-author-page-info :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-author-page-info :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-author-page-info :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.np-author-page-info :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.np-author-page-info :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.np-author-page-info :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.np-author-page-info :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.np-author-page-info :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.np-author-page-info :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.np-author-page-info :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.np-author-page-info :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.np-author-page-info :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.np-author-page-info :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.np-author-page-info :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.np-author-page-info :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.np-author-page-info :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.np-author-page-info :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.np-author-page-info :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.np-author-page-info :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.np-author-page-info :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.np-author-page-info :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.np-author-page-info :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.np-author-page-info :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.np-author-page-info :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.np-author-page-info :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.np-author-page-info :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.np-author-page-info :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.np-author-page-info :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.np-author-page-info :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.np-author-page-info :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.np-author-page-info :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.np-author-page-info :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.np-author-page-info :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.np-author-page-info :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-author-page-info :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-author-page-info :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.np-author-page-info :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.np-author-page-info :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-author-page-info :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-author-page-info :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-author-page-info :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.np-author-page-info :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.np-author-page-info :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.np-author-page-info :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.np-author-page-info :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.np-author-page-info :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.np-author-page-info :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.np-author-page-info :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.np-author-page-info :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.np-author-page-info :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.np-author-page-info :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.np-author-page-info :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.np-author-page-info {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.np-author-page-info :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.np-author-page-info :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.np-author-page-info :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.np-author-page-info :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.np-author-page-info :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.np-author-page-info :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.np-author-page-info :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.np-author-page-info :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.np-author-page-info :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.np-author-page-info :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.np-author-page-info :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.np-author-page-info :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.np-author-page-info :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.np-author-page-info :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.np-author-page-info :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.np-author-page-info :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.np-author-page-info :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.np-author-page-info :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.np-author-page-info :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.np-author-page-info :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.np-author-page-info :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.np-author-page-info :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.np-author-page-info :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-sm :where(.np-author-page-info > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(.np-author-page-info > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.np-author-page-info > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.np-author-page-info > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.np-author-page-info > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.np-author-page-info > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm :where(.np-author-page-info > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-base :where(.np-author-page-info > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose-base :where(.np-author-page-info > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.np-author-page-info > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.np-author-page-info > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.np-author-page-info > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.np-author-page-info > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-base :where(.np-author-page-info > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-lg :where(.np-author-page-info > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-lg :where(.np-author-page-info > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.np-author-page-info > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.np-author-page-info > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.np-author-page-info > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.np-author-page-info > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg :where(.np-author-page-info > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-xl :where(.np-author-page-info > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8em;
  margin-bottom: 0.8em;
}

.prose-xl :where(.np-author-page-info > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.np-author-page-info > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.np-author-page-info > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.np-author-page-info > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.np-author-page-info > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-xl :where(.np-author-page-info > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-2xl :where(.np-author-page-info > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8333333em;
  margin-bottom: 0.8333333em;
}

.prose-2xl :where(.np-author-page-info > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.np-author-page-info > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.np-author-page-info > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.np-author-page-info > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.np-author-page-info > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-2xl :where(.np-author-page-info > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.np-author-page-info {
  margin-top: 0.75rem;
  display: flex;
  justify-content: center;
}

.np-author-page-info > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.np-author-page-info {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .np-author-page-info {
    margin-top: 1rem;
  }
}

#masthead {
  border-bottom-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(249 250 251 / var(--tw-border-opacity));
}

.np-header-container {
  margin-left: auto;
  margin-right: auto;
  padding: 1.5rem;
}

@media (min-width: 640px) {
  .np-header-container {
    padding: 2rem;
  }
}

@media (min-width: 1024px) {
  .np-header-container {
    max-width: 80rem;
  }
}

@media (min-width: 1280px) {
  .np-header-container {
    padding-left: 3rem;
    padding-right: 3rem;
  }
}

@media (min-width: 1536px) {
  .np-header-container {
    padding: 2rem;
  }
}

.site-branding {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  text-align: center;
}

.site-branding h1 a,
.site-branding p a {
  font-size: 1.5rem;
  font-weight: 700;
}

.site-branding h1 a:hover,
.site-branding p a:hover {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.site-branding p {
  margin: 0px;
}

.site-title a:hover:hover,
.site-title a:focus:hover {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.site-description {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.site-menu-inner {
  display: none;
  flex: 0 1 100%;
}

.site-menu-inner.toggled-on,
.no-js .site-menu-inner {
  display: block;
}

/* Navigation
--------------------------------------------- */

.main-navigation ul {
  list-style: none;
  margin: 0;
}

.main-navigation li:first-child {
  border-top-width: 0px;
}

.main-navigation li {
  position: relative;
  border-top-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

.main-navigation li:hover > a,
.main-navigation li.focus > a {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.main-navigation a {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
  display: block;
  line-height: 1.3125;
  outline-offset: -1px;
  padding: 0.84375em 0;
}

.main-navigation a:hover,
.main-navigation a:focus,
.main-navigation .current-menu-item > a,
.main-navigation .current_page_item > a {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.main-navigation ul ul {
  text-transform: none;
  display: none;
  margin-left: 0.875em;
}

.no-js .main-navigation ul ul {
  display: block;
}

.main-navigation ul .toggled-on {
  display: block;
}

.main-navigation .menu-item-has-children > a,
.main-navigation .page_item_has_children > a {
  margin: 0px;
  padding-right: 2.25em;
}

.dropdown-toggle {
  background-color: transparent;
  border: 0 solid #e5e7eb;
  border-left-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
  border-radius: 0;
  content: "";
  height: 48px;
  padding: 0;
  position: absolute;
  right: 0;
  text-transform: none;
  top: 0;
  width: 48px;
}

.dropdown-toggle:after {
  content: '\25BE';
  font-size: 32px;
  position: relative;
  width: 48px;
}

.dropdown-toggle:hover,
.dropdown-toggle:focus {
  background-color: transparent;
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.dropdown-toggle:focus {
  outline: thin dotted;
  outline-offset: -1px;
}

.dropdown-toggle:focus:after {
  border-color: transparent;
}

.dropdown-toggle.toggled-on:after {
  content: '\25BE';
}

.menu-toggle {
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: center;
  font-size: 16px;
}

.no-js .menu-toggle {
  display: none;
}

.menu-button-wrapper button {
  margin-top: 1rem;
  border-radius: 0.25rem;
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.menu-toggle,
.menu-toggle:hover,
.menu-toggle:focus,
.toggle-icon:hover,
.toggle-icon:focus {
  border-style: none;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.menu-toggle.toggled-on,
.menu-toggle.toggled-on:hover,
.menu-toggle.toggled-on:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(16 185 129 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.menu-toggle:focus {
  outline: 0;
}

.toggle-icon {
  display: inline-block;
  height: 1.5rem;
  width: 1.5rem;
  padding-right: 0.5rem;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.site-main {
  flex-grow: 1;
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

.np-container {
  margin-left: auto;
  margin-right: auto;
  overflow: hidden;
  padding: 1.5rem;
}

@media (min-width: 640px) {
  .np-container {
    padding: 2rem;
  }
}

@media (min-width: 1024px) {
  .np-container {
    max-width: 80rem;
  }
}

@media (min-width: 1280px) {
  .np-container {
    padding: 3rem;
  }
}

@media (min-width: 1536px) {
  .np-container {
    padding: 2rem;
  }
}

.np-container {
  -ms-word-wrap: break-word;
  word-wrap: break-word;
}

.np-grid-entries {
  margin-left: auto;
  margin-right: auto;
  display: grid;
  gap: 1.5rem;
}

@media (min-width: 640px) {
  .np-grid-entries {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (min-width: 1024px) {
  .np-grid-entries {
    max-width: none;
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

.np-layout-entries {
  margin-left: auto;
  margin-right: auto;
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 2rem;
}

@media (min-width: 1024px) {
  .np-layout-entries {
    grid-auto-flow: column dense;
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

.np-layout-content-right > :not([hidden]) ~ :not([hidden]),
.np-layout-aside-right > :not([hidden]) ~ :not([hidden]),
.np-layout-content-left > :not([hidden]) ~ :not([hidden]),
.np-layout-aside-left > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

.np-layout-content-right,
.np-layout-aside-right,
.np-layout-content-left,
.np-layout-aside-left {
  overflow: hidden;
}

@media (min-width: 1024px) {
  .np-layout-content-right {
    grid-column: span 2 / span 2;
  }

  .np-layout-aside-right {
    grid-column-start: 3;
  }

  .np-layout-content-left {
    grid-column: span 2 / span 2;
  }

  .np-layout-aside-left {
    grid-column-start: 1;
  }
}

.entry-card {
  display: flex;
  flex-direction: column;
  overflow: hidden;
  border-radius: 0.5rem;
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.np-entry-content {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
  justify-content: space-between;
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  padding: 1.5rem;
}

.np-entry-header {
  flex: none;
}

.np-entry-title {
  margin-top: 0.5rem;
  display: block;
  font-size: 1.25rem;
}

.np-entry-title a {
  font-weight: 600;
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

.np-entry-title a:hover {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.np-entry-summary {
  flex: 1 1 0%;
}

.np-entry-summary p {
  margin-top: 0.75rem;
  font-size: 100%;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 4;
}

.np-entry-summary .page-links {
  margin-top: 1rem;
  margin-bottom: 0px;
  font-size: 100%;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.np-entry-summary .page-links a.post-page-numbers {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.tags-links {
  display: flex;
  flex-wrap: wrap;
  text-align: center;
}

.tags-links a {
  margin-bottom: 0.25rem;
  margin-right: 0.25rem;
  border-radius: 0.25rem;
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  font-size: .875rem;
  font-weight: 400;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
  text-decoration-line: none;
}

.tags-links a:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(16 185 129 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.widget-area,
.widget_block {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.widget-area :where([class~="lead"]):not(:where([class~="not-prose"] *)),
.widget_block :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.widget-area :where(a):not(:where([class~="not-prose"] *)),
.widget_block :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.widget-area :where(strong):not(:where([class~="not-prose"] *)),
.widget_block :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.widget-area :where(a strong):not(:where([class~="not-prose"] *)),
.widget_block :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.widget-area :where(blockquote strong):not(:where([class~="not-prose"] *)),
.widget_block :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.widget-area :where(thead th strong):not(:where([class~="not-prose"] *)),
.widget_block :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.widget-area :where(ol):not(:where([class~="not-prose"] *)),
.widget_block :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.widget-area :where(ol[type="A"]):not(:where([class~="not-prose"] *)),
.widget_block :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.widget-area :where(ol[type="a"]):not(:where([class~="not-prose"] *)),
.widget_block :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.widget-area :where(ol[type="A" s]):not(:where([class~="not-prose"] *)),
.widget_block :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.widget-area :where(ol[type="a" s]):not(:where([class~="not-prose"] *)),
.widget_block :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.widget-area :where(ol[type="I"]):not(:where([class~="not-prose"] *)),
.widget_block :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.widget-area :where(ol[type="i"]):not(:where([class~="not-prose"] *)),
.widget_block :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.widget-area :where(ol[type="I" s]):not(:where([class~="not-prose"] *)),
.widget_block :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.widget-area :where(ol[type="i" s]):not(:where([class~="not-prose"] *)),
.widget_block :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.widget-area :where(ol[type="1"]):not(:where([class~="not-prose"] *)),
.widget_block :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.widget-area :where(ul):not(:where([class~="not-prose"] *)),
.widget_block :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.widget-area :where(ol > li):not(:where([class~="not-prose"] *))::marker,
.widget_block :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.widget-area :where(ul > li):not(:where([class~="not-prose"] *))::marker,
.widget_block :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.widget-area :where(hr):not(:where([class~="not-prose"] *)),
.widget_block :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.widget-area :where(blockquote):not(:where([class~="not-prose"] *)),
.widget_block :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.widget-area :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before,
.widget_block :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.widget-area :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after,
.widget_block :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.widget-area :where(h1):not(:where([class~="not-prose"] *)),
.widget_block :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.widget-area :where(h1 strong):not(:where([class~="not-prose"] *)),
.widget_block :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.widget-area :where(h2):not(:where([class~="not-prose"] *)),
.widget_block :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.widget-area :where(h2 strong):not(:where([class~="not-prose"] *)),
.widget_block :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.widget-area :where(h3):not(:where([class~="not-prose"] *)),
.widget_block :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.widget-area :where(h3 strong):not(:where([class~="not-prose"] *)),
.widget_block :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.widget-area :where(h4):not(:where([class~="not-prose"] *)),
.widget_block :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.widget-area :where(h4 strong):not(:where([class~="not-prose"] *)),
.widget_block :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.widget-area :where(img):not(:where([class~="not-prose"] *)),
.widget_block :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.widget-area :where(figure > *):not(:where([class~="not-prose"] *)),
.widget_block :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.widget-area :where(figcaption):not(:where([class~="not-prose"] *)),
.widget_block :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.widget-area :where(code):not(:where([class~="not-prose"] *)),
.widget_block :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.widget-area :where(code):not(:where([class~="not-prose"] *))::before,
.widget_block :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.widget-area :where(code):not(:where([class~="not-prose"] *))::after,
.widget_block :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.widget-area :where(a code):not(:where([class~="not-prose"] *)),
.widget_block :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.widget-area :where(h1 code):not(:where([class~="not-prose"] *)),
.widget_block :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.widget-area :where(h2 code):not(:where([class~="not-prose"] *)),
.widget_block :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.widget-area :where(h3 code):not(:where([class~="not-prose"] *)),
.widget_block :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.widget-area :where(h4 code):not(:where([class~="not-prose"] *)),
.widget_block :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.widget-area :where(blockquote code):not(:where([class~="not-prose"] *)),
.widget_block :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.widget-area :where(thead th code):not(:where([class~="not-prose"] *)),
.widget_block :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.widget-area :where(pre):not(:where([class~="not-prose"] *)),
.widget_block :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.widget-area :where(pre code):not(:where([class~="not-prose"] *)),
.widget_block :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.widget-area :where(pre code):not(:where([class~="not-prose"] *))::before,
.widget_block :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.widget-area :where(pre code):not(:where([class~="not-prose"] *))::after,
.widget_block :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.widget-area :where(table):not(:where([class~="not-prose"] *)),
.widget_block :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.widget-area :where(thead):not(:where([class~="not-prose"] *)),
.widget_block :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.widget-area :where(thead th):not(:where([class~="not-prose"] *)),
.widget_block :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.widget-area :where(tbody tr):not(:where([class~="not-prose"] *)),
.widget_block :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.widget-area :where(tbody tr:last-child):not(:where([class~="not-prose"] *)),
.widget_block :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.widget-area :where(tbody td):not(:where([class~="not-prose"] *)),
.widget_block :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.widget-area :where(tfoot):not(:where([class~="not-prose"] *)),
.widget_block :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.widget-area :where(tfoot td):not(:where([class~="not-prose"] *)),
.widget_block :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.widget-area,
.widget_block {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.widget-area :where(p):not(:where([class~="not-prose"] *)),
.widget_block :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.widget-area :where(video):not(:where([class~="not-prose"] *)),
.widget_block :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.widget-area :where(figure):not(:where([class~="not-prose"] *)),
.widget_block :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.widget-area :where(li):not(:where([class~="not-prose"] *)),
.widget_block :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.widget-area :where(ol > li):not(:where([class~="not-prose"] *)),
.widget_block :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.widget-area :where(ul > li):not(:where([class~="not-prose"] *)),
.widget_block :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.widget-area :where(.prose > ul > li p):not(:where([class~="not-prose"] *)),
.widget_block :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.widget-area :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)),
.widget_block :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.widget-area :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)),
.widget_block :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.widget-area :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)),
.widget_block :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.widget-area :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)),
.widget_block :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.widget-area :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)),
.widget_block :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.widget-area :where(hr + *):not(:where([class~="not-prose"] *)),
.widget_block :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.widget-area :where(h2 + *):not(:where([class~="not-prose"] *)),
.widget_block :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.widget-area :where(h3 + *):not(:where([class~="not-prose"] *)),
.widget_block :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.widget-area :where(h4 + *):not(:where([class~="not-prose"] *)),
.widget_block :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.widget-area :where(thead th:first-child):not(:where([class~="not-prose"] *)),
.widget_block :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.widget-area :where(thead th:last-child):not(:where([class~="not-prose"] *)),
.widget_block :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.widget-area :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)),
.widget_block :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.widget-area :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)),
.widget_block :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.widget-area :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)),
.widget_block :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.widget-area :where(.prose > :first-child):not(:where([class~="not-prose"] *)),
.widget_block :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.widget-area :where(.prose > :last-child):not(:where([class~="not-prose"] *)),
.widget_block :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-sm :where(.widget-area > ul > li p):not(:where([class~="not-prose"] *)),.prose-sm :where(
.widget_block > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(.widget-area > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.widget_block > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.widget-area > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.widget_block > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.widget-area > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.widget_block > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.widget-area > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.widget_block > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.widget-area > :first-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.widget_block > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm :where(.widget-area > :last-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.widget_block > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-base :where(.widget-area > ul > li p):not(:where([class~="not-prose"] *)),.prose-base :where(
.widget_block > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose-base :where(.widget-area > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.widget_block > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.widget-area > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.widget_block > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.widget-area > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.widget_block > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.widget-area > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.widget_block > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.widget-area > :first-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.widget_block > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-base :where(.widget-area > :last-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.widget_block > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-lg :where(.widget-area > ul > li p):not(:where([class~="not-prose"] *)),.prose-lg :where(
.widget_block > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-lg :where(.widget-area > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.widget_block > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.widget-area > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.widget_block > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.widget-area > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.widget_block > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.widget-area > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.widget_block > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.widget-area > :first-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.widget_block > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg :where(.widget-area > :last-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.widget_block > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-xl :where(.widget-area > ul > li p):not(:where([class~="not-prose"] *)),.prose-xl :where(
.widget_block > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8em;
  margin-bottom: 0.8em;
}

.prose-xl :where(.widget-area > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.widget_block > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.widget-area > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.widget_block > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.widget-area > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.widget_block > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.widget-area > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.widget_block > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.widget-area > :first-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.widget_block > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-xl :where(.widget-area > :last-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.widget_block > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-2xl :where(.widget-area > ul > li p):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.widget_block > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8333333em;
  margin-bottom: 0.8333333em;
}

.prose-2xl :where(.widget-area > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.widget_block > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.widget-area > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.widget_block > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.widget-area > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.widget_block > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.widget-area > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.widget_block > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.widget-area > :first-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.widget_block > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-2xl :where(.widget-area > :last-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.widget_block > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.widget-area,
.widget_block {
  --tw-prose-links: #059669;
  --tw-prose-invert-links: #10b981;
}

.widget-area h2 {
  font-size: 1.5rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

#colophon {
  border-top-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(249 250 251 / var(--tw-border-opacity));
}

.footer-nav-menu {
  margin-left: -1.25rem;
  margin-right: -1.25rem;
  margin-top: -0.5rem;
  margin-bottom: -0.5rem;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.footer-nav-menu ul {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
}

.footer-nav-menu ul li ul.sub-menu,
.footer-nav-menu ul li ul.children {
  display: none;
}

.footer-nav-menu ul li {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 100%;
}

.footer-nav-menu ul li a,
.footer-nav-menu ul li a:visited {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.footer-nav-menu ul li a:hover,
.footer-nav-menu ul li a:focus,
a.footer-nav-menu ul li.current-menu-item a,
.footer-nav-menu ul li.current_page_item a {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.site-info,
.site-info a.wp-site {
  margin-top: 2rem;
  text-align: center;
  font-size: 100%;
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

.site-info a:hover,
.site-info a.np-site {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.site-info a.np-site:hover {
  --tw-text-opacity: 1;
  color: rgb(5 150 105 / var(--tw-text-opacity));
}

@media (max-width: 1023px) {
  .main-navigation ul li > ul li:first-child {
    border-top-width: 1px;
  }
}

@media (min-width: 1024px) {
  .header-inner {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .site-branding {
    text-align: left;
  }

  .site-menu-inner {
    display: block;
    flex: 0 1 auto;
  }

  .main-navigation {
    margin: 0 -0.875em;
  }

  .main-navigation div > ul,
   .main-navigation div > ul > li {
    float: left;
    border-width: 0px;
  }

  .main-navigation li {
    border-width: 0px;
  }

  .main-navigation a {
    outline-offset: -8px;
    padding: 0.65625em 0.875em;
    white-space: nowrap;
    --tw-text-opacity: 1;
    color: rgb(107 114 128 / var(--tw-text-opacity));
  }

  .main-navigation li:hover > a,
	.main-navigation li.focus > a {
    --tw-text-opacity: 1;
    color: rgb(16 185 129 / var(--tw-text-opacity));
  }

  .main-navigation ul ul {
    position: absolute;
    margin: 0px;
    display: block;
    border-bottom-width: 1px;
    --tw-border-opacity: 1;
    border-color: rgb(55 65 81 / var(--tw-border-opacity));
    left: -999em;
    z-index: 99999;
  }

  .main-navigation ul ul:last-child {
    border-width: 0px;
  }

  .main-navigation ul ul ul:before,
	.main-navigation ul ul ul:after {
    border: 0;
  }

  .main-navigation ul ul li {
    border-width: 1px;
    border-bottom-width: 0px;
    --tw-border-opacity: 1;
    border-color: rgb(55 65 81 / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: rgb(31 41 55 / var(--tw-bg-opacity));
  }

  .main-navigation ul ul a {
    white-space: normal;
    width: 13em;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
  }

  .main-navigation ul ul:before,
	.main-navigation ul ul:after {
    position: absolute;
    border-style: solid;
    content: " ";
  }

  .main-navigation ul ul:before {
    border-color: rgba(55, 65, 81, 1) transparent;
    border-width: 0 10px 10px;
    right: 0.3333em;
    top: -8.5px;
  }

  .main-navigation ul ul:after {
    border-color: rgba(31, 41, 55, 1) transparent;
    border-width: 0 8px 8px;
    right: 0.4666em;
    top: -7px;
  }

  .main-navigation li:hover > ul,
	.main-navigation li.focus > ul {
    left: auto;
    right: 0px;
  }

  .main-navigation ul ul li:hover > ul,
	.main-navigation ul ul li.focus > ul {
    left: auto;
    right: 100%;
  }

  .main-navigation .menu-item-has-children > a,
	.main-navigation .page_item_has_children > a {
    margin: 0;
    padding-right: 2.0625em;
  }

  .main-navigation .menu-item-has-children > a:after,
	.main-navigation .page_item_has_children > a:after {
    content: '\25BE';
    padding-left: 0.5rem;
    position: absolute;
    right: 0.625em;
  }

  .main-navigation ul ul .menu-item-has-children > a,
	.main-navigation ul ul .page_item_has_children > a {
    padding-right: 2.0625em;
  }

  .main-navigation ul ul .menu-item-has-children > a:after,
	.main-navigation ul ul .page_item_has_children > a:after {
    right: 0.5em;
    top: 0.5em;
    transform: rotate(90deg);
  }

  .main-navigation .menu-item-has-children ul.sub-menu a,
   .main-navigation .page_item_has_children ul.sub-menu a,
   .main-navigation .menu-item-has-children ul.children a,
   .main-navigation .page_item_has_children ul.children a {
    font-size: .875rem;
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }

  .main-navigation .menu-item-has-children ul.sub-menu a:hover,
   .main-navigation .page_item_has_children ul.sub-menu a:hover,
   .main-navigation .menu-item-has-children ul.children a:hover,
   .main-navigation .page_item_has_children ul.children a:hover {
    --tw-text-opacity: 1;
    color: rgb(16 185 129 / var(--tw-text-opacity));
  }

  .main-navigation .menu-item-has-children ul.sub-menu > li ul.sub-menu,
	.main-navigation .page_item_has_children ul.sub-menu > li ul.sub-menu,
	.main-navigation .menu-item-has-children ul.children > li ul.children,
	.main-navigation .page_item_has_children ul.children > li ul.children {
    top: 0;
  }

  .dropdown-toggle,
	.main-navigation ul .dropdown-toggle.toggled-on,
	.menu-toggle {
    display: none;
  }
}

/* NesiaPress Components
--------------------------------------------- */

.entry-header,
.entry-header-narrow,
.entry-header-center {
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1.5rem;
  font-size: 1.125rem;
}

.entry-header-narrow {
  max-width: 65ch;
}

.entry-header-center .entry-cat-links,
.entry-header-center h1.entry-title {
  text-align: center;
}

.cat-links {
  font-size: .875rem;
  font-weight: 500;
}

.entry-cat-links {
  display: block;
  font-size: 100%;
  font-weight: 600;
  letter-spacing: 0.025em;
}

.cat-links a,
.entry-cat-links a {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.cat-links a:hover,
.entry-cat-links a:hover {
  text-decoration-line: none;
  --tw-text-opacity: 1;
  color: rgb(5 150 105 / var(--tw-text-opacity));
}

h1.entry-title {
  margin-top: 1rem;
  display: block;
  font-size: 1.875rem;
  font-weight: 600;
  letter-spacing: -0.025em;
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  h1.entry-title {
    font-size: 2.25rem;
  }
}

.entry-content,
.entry-content-narrow {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.entry-content :where([class~="lead"]):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.entry-content :where(a):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.entry-content :where(strong):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.entry-content :where(a strong):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-content :where(blockquote strong):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-content :where(thead th strong):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-content :where(ol):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.entry-content :where(ol[type="A"]):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.entry-content :where(ol[type="a"]):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.entry-content :where(ol[type="A" s]):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.entry-content :where(ol[type="a" s]):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.entry-content :where(ol[type="I"]):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.entry-content :where(ol[type="i"]):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.entry-content :where(ol[type="I" s]):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.entry-content :where(ol[type="i" s]):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.entry-content :where(ol[type="1"]):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.entry-content :where(ul):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.entry-content :where(ol > li):not(:where([class~="not-prose"] *))::marker,
.entry-content-narrow :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.entry-content :where(ul > li):not(:where([class~="not-prose"] *))::marker,
.entry-content-narrow :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.entry-content :where(hr):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.entry-content :where(blockquote):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.entry-content :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before,
.entry-content-narrow :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.entry-content :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after,
.entry-content-narrow :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.entry-content :where(h1):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.entry-content :where(h1 strong):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.entry-content :where(h2):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.entry-content :where(h2 strong):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.entry-content :where(h3):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.entry-content :where(h3 strong):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.entry-content :where(h4):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.entry-content :where(h4 strong):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.entry-content :where(img):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.entry-content :where(figure > *):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.entry-content :where(figcaption):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.entry-content :where(code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.entry-content :where(code):not(:where([class~="not-prose"] *))::before,
.entry-content-narrow :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.entry-content :where(code):not(:where([class~="not-prose"] *))::after,
.entry-content-narrow :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.entry-content :where(a code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-content :where(h1 code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-content :where(h2 code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.entry-content :where(h3 code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.entry-content :where(h4 code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-content :where(blockquote code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-content :where(thead th code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-content :where(pre):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.entry-content :where(pre code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.entry-content :where(pre code):not(:where([class~="not-prose"] *))::before,
.entry-content-narrow :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.entry-content :where(pre code):not(:where([class~="not-prose"] *))::after,
.entry-content-narrow :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.entry-content :where(table):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.entry-content :where(thead):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.entry-content :where(thead th):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.entry-content :where(tbody tr):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.entry-content :where(tbody tr:last-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.entry-content :where(tbody td):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.entry-content :where(tfoot):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.entry-content :where(tfoot td):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.entry-content,
.entry-content-narrow {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.entry-content :where(p):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.entry-content :where(video):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.entry-content :where(figure):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.entry-content :where(li):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.entry-content :where(ol > li):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.entry-content :where(ul > li):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.entry-content :where(.prose > ul > li p):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.entry-content :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.entry-content :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.entry-content :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.entry-content :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.entry-content :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.entry-content :where(hr + *):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-content :where(h2 + *):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-content :where(h3 + *):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-content :where(h4 + *):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-content :where(thead th:first-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.entry-content :where(thead th:last-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.entry-content :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.entry-content :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.entry-content :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.entry-content :where(.prose > :first-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-content :where(.prose > :last-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-sm :where(.entry-content > ul > li p):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-content-narrow > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(.entry-content > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-content-narrow > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.entry-content > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-content-narrow > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.entry-content > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-content-narrow > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.entry-content > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-content-narrow > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.entry-content > :first-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-content-narrow > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm :where(.entry-content > :last-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-content-narrow > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-base :where(.entry-content > ul > li p):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-content-narrow > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose-base :where(.entry-content > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-content-narrow > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.entry-content > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-content-narrow > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.entry-content > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-content-narrow > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.entry-content > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-content-narrow > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.entry-content > :first-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-content-narrow > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-base :where(.entry-content > :last-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-content-narrow > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.entry-content,
.entry-content-narrow {
  font-size: 1.125rem;
  line-height: 1.7777778;
}

.entry-content :where(p):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}

.entry-content :where([class~="lead"]):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  font-size: 1.2222222em;
  line-height: 1.4545455;
  margin-top: 1.0909091em;
  margin-bottom: 1.0909091em;
}

.entry-content :where(blockquote):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(blockquote):not(:where([class~="not-prose"] *)) {
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  padding-left: 1em;
}

.entry-content :where(h1):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h1):not(:where([class~="not-prose"] *)) {
  font-size: 2.6666667em;
  margin-top: 0;
  margin-bottom: 0.8333333em;
  line-height: 1;
}

.entry-content :where(h2):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h2):not(:where([class~="not-prose"] *)) {
  font-size: 1.6666667em;
  margin-top: 1.8666667em;
  margin-bottom: 1.0666667em;
  line-height: 1.3333333;
}

.entry-content :where(h3):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h3):not(:where([class~="not-prose"] *)) {
  font-size: 1.3333333em;
  margin-top: 1.6666667em;
  margin-bottom: 0.6666667em;
  line-height: 1.5;
}

.entry-content :where(h4):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h4):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.entry-content :where(img):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.entry-content :where(video):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.entry-content :where(figure):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.entry-content :where(figure > *):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.entry-content :where(figcaption):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(figcaption):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
  margin-top: 1em;
}

.entry-content :where(code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(code):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
}

.entry-content :where(h2 code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h2 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.8666667em;
}

.entry-content :where(h3 code):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h3 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.875em;
}

.entry-content :where(pre):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(pre):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.75;
  margin-top: 2em;
  margin-bottom: 2em;
  border-radius: 0.375rem;
  padding-top: 1em;
  padding-right: 1.5em;
  padding-bottom: 1em;
  padding-left: 1.5em;
}

.entry-content :where(ol):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.entry-content :where(ul):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ul):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.entry-content :where(li):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.6666667em;
  margin-bottom: 0.6666667em;
}

.entry-content :where(ol > li):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.entry-content :where(ul > li):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.entry-content :where(.prose > ul > li p):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-lg :where(.entry-content > ul > li p):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-content-narrow > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.entry-content :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.entry-content > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-content-narrow > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.entry-content :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.entry-content > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-content-narrow > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.entry-content :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.entry-content > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-content-narrow > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.entry-content :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.entry-content > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-content-narrow > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.entry-content :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.entry-content :where(hr):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(hr):not(:where([class~="not-prose"] *)) {
  margin-top: 3.1111111em;
  margin-bottom: 3.1111111em;
}

.entry-content :where(hr + *):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-content :where(h2 + *):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-content :where(h3 + *):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-content :where(h4 + *):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-content :where(table):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(table):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
}

.entry-content :where(thead th):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(thead th):not(:where([class~="not-prose"] *)) {
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.entry-content :where(thead th:first-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.entry-content :where(thead th:last-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.entry-content :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.75em;
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.entry-content :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.entry-content :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.entry-content :where(.prose > :first-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg :where(.entry-content > :first-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-content-narrow > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-content :where(.prose > :last-child):not(:where([class~="not-prose"] *)),
.entry-content-narrow :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-lg :where(.entry-content > :last-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-content-narrow > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-xl :where(.entry-content > ul > li p):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-content-narrow > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8em;
  margin-bottom: 0.8em;
}

.prose-xl :where(.entry-content > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-content-narrow > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.entry-content > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-content-narrow > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.entry-content > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-content-narrow > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.entry-content > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-content-narrow > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.entry-content > :first-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-content-narrow > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-xl :where(.entry-content > :last-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-content-narrow > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-2xl :where(.entry-content > ul > li p):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-content-narrow > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8333333em;
  margin-bottom: 0.8333333em;
}

.prose-2xl :where(.entry-content > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-content-narrow > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.entry-content > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-content-narrow > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.entry-content > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-content-narrow > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.entry-content > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-content-narrow > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.entry-content > :first-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-content-narrow > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-2xl :where(.entry-content > :last-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-content-narrow > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.entry-content,
.entry-content-narrow {
  --tw-prose-links: #059669;
  --tw-prose-invert-links: #10b981;
  margin-left: auto;
  margin-right: auto;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.entry-content .page-links,
.entry-content-narrow .page-links {
  margin-top: 2rem;
}

.entry-content .page-links > :not([hidden]) ~ :not([hidden]),
.entry-content-narrow .page-links > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.entry-content .page-links .post-page-numbers.current,
.entry-content-narrow .page-links .post-page-numbers.current {
  border-radius: 0.25rem;
  --tw-bg-opacity: 1;
  background-color: rgb(16 185 129 / var(--tw-bg-opacity));
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.entry-footer,
.entry-footer-narrow {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.entry-footer :where([class~="lead"]):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.entry-footer :where(a):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.entry-footer :where(strong):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.entry-footer :where(a strong):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-footer :where(blockquote strong):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-footer :where(thead th strong):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-footer :where(ol):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.entry-footer :where(ol[type="A"]):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.entry-footer :where(ol[type="a"]):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.entry-footer :where(ol[type="A" s]):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.entry-footer :where(ol[type="a" s]):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.entry-footer :where(ol[type="I"]):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.entry-footer :where(ol[type="i"]):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.entry-footer :where(ol[type="I" s]):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.entry-footer :where(ol[type="i" s]):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.entry-footer :where(ol[type="1"]):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.entry-footer :where(ul):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.entry-footer :where(ol > li):not(:where([class~="not-prose"] *))::marker,
.entry-footer-narrow :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.entry-footer :where(ul > li):not(:where([class~="not-prose"] *))::marker,
.entry-footer-narrow :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.entry-footer :where(hr):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.entry-footer :where(blockquote):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.entry-footer :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before,
.entry-footer-narrow :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.entry-footer :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after,
.entry-footer-narrow :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.entry-footer :where(h1):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.entry-footer :where(h1 strong):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.entry-footer :where(h2):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.entry-footer :where(h2 strong):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.entry-footer :where(h3):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.entry-footer :where(h3 strong):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.entry-footer :where(h4):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.entry-footer :where(h4 strong):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.entry-footer :where(img):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.entry-footer :where(figure > *):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.entry-footer :where(figcaption):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.entry-footer :where(code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.entry-footer :where(code):not(:where([class~="not-prose"] *))::before,
.entry-footer-narrow :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.entry-footer :where(code):not(:where([class~="not-prose"] *))::after,
.entry-footer-narrow :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.entry-footer :where(a code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-footer :where(h1 code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-footer :where(h2 code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.entry-footer :where(h3 code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.entry-footer :where(h4 code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-footer :where(blockquote code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-footer :where(thead th code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.entry-footer :where(pre):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.entry-footer :where(pre code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.entry-footer :where(pre code):not(:where([class~="not-prose"] *))::before,
.entry-footer-narrow :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.entry-footer :where(pre code):not(:where([class~="not-prose"] *))::after,
.entry-footer-narrow :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.entry-footer :where(table):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.entry-footer :where(thead):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.entry-footer :where(thead th):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.entry-footer :where(tbody tr):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.entry-footer :where(tbody tr:last-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.entry-footer :where(tbody td):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.entry-footer :where(tfoot):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.entry-footer :where(tfoot td):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.entry-footer,
.entry-footer-narrow {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.entry-footer :where(p):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.entry-footer :where(video):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.entry-footer :where(figure):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.entry-footer :where(li):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.entry-footer :where(ol > li):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.entry-footer :where(ul > li):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.entry-footer :where(.prose > ul > li p):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.entry-footer :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.entry-footer :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.entry-footer :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.entry-footer :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.entry-footer :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.entry-footer :where(hr + *):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-footer :where(h2 + *):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-footer :where(h3 + *):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-footer :where(h4 + *):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-footer :where(thead th:first-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.entry-footer :where(thead th:last-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.entry-footer :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.entry-footer :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.entry-footer :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.entry-footer :where(.prose > :first-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-footer :where(.prose > :last-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-sm :where(.entry-footer > ul > li p):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-footer-narrow > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(.entry-footer > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-footer-narrow > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.entry-footer > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-footer-narrow > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.entry-footer > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-footer-narrow > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.entry-footer > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-footer-narrow > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.entry-footer > :first-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-footer-narrow > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm :where(.entry-footer > :last-child):not(:where([class~="not-prose"] *)),.prose-sm :where(
.entry-footer-narrow > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-base :where(.entry-footer > ul > li p):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-footer-narrow > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose-base :where(.entry-footer > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-footer-narrow > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.entry-footer > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-footer-narrow > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.entry-footer > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-footer-narrow > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.entry-footer > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-footer-narrow > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.entry-footer > :first-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-footer-narrow > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-base :where(.entry-footer > :last-child):not(:where([class~="not-prose"] *)),.prose-base :where(
.entry-footer-narrow > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.entry-footer,
.entry-footer-narrow {
  font-size: 1.125rem;
  line-height: 1.7777778;
}

.entry-footer :where(p):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}

.entry-footer :where([class~="lead"]):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  font-size: 1.2222222em;
  line-height: 1.4545455;
  margin-top: 1.0909091em;
  margin-bottom: 1.0909091em;
}

.entry-footer :where(blockquote):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(blockquote):not(:where([class~="not-prose"] *)) {
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  padding-left: 1em;
}

.entry-footer :where(h1):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h1):not(:where([class~="not-prose"] *)) {
  font-size: 2.6666667em;
  margin-top: 0;
  margin-bottom: 0.8333333em;
  line-height: 1;
}

.entry-footer :where(h2):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h2):not(:where([class~="not-prose"] *)) {
  font-size: 1.6666667em;
  margin-top: 1.8666667em;
  margin-bottom: 1.0666667em;
  line-height: 1.3333333;
}

.entry-footer :where(h3):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h3):not(:where([class~="not-prose"] *)) {
  font-size: 1.3333333em;
  margin-top: 1.6666667em;
  margin-bottom: 0.6666667em;
  line-height: 1.5;
}

.entry-footer :where(h4):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h4):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.entry-footer :where(img):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.entry-footer :where(video):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.entry-footer :where(figure):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.entry-footer :where(figure > *):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.entry-footer :where(figcaption):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(figcaption):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
  margin-top: 1em;
}

.entry-footer :where(code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(code):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
}

.entry-footer :where(h2 code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h2 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.8666667em;
}

.entry-footer :where(h3 code):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h3 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.875em;
}

.entry-footer :where(pre):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(pre):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.75;
  margin-top: 2em;
  margin-bottom: 2em;
  border-radius: 0.375rem;
  padding-top: 1em;
  padding-right: 1.5em;
  padding-bottom: 1em;
  padding-left: 1.5em;
}

.entry-footer :where(ol):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.entry-footer :where(ul):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ul):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.entry-footer :where(li):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.6666667em;
  margin-bottom: 0.6666667em;
}

.entry-footer :where(ol > li):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.entry-footer :where(ul > li):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.entry-footer :where(.prose > ul > li p):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-lg :where(.entry-footer > ul > li p):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-footer-narrow > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.entry-footer :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.entry-footer > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-footer-narrow > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.entry-footer :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.entry-footer > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-footer-narrow > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.entry-footer :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.entry-footer > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-footer-narrow > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.entry-footer :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.entry-footer > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-footer-narrow > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.entry-footer :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.entry-footer :where(hr):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(hr):not(:where([class~="not-prose"] *)) {
  margin-top: 3.1111111em;
  margin-bottom: 3.1111111em;
}

.entry-footer :where(hr + *):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-footer :where(h2 + *):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-footer :where(h3 + *):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-footer :where(h4 + *):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-footer :where(table):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(table):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
}

.entry-footer :where(thead th):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(thead th):not(:where([class~="not-prose"] *)) {
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.entry-footer :where(thead th:first-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.entry-footer :where(thead th:last-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.entry-footer :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.75em;
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.entry-footer :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.entry-footer :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.entry-footer :where(.prose > :first-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg :where(.entry-footer > :first-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-footer-narrow > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.entry-footer :where(.prose > :last-child):not(:where([class~="not-prose"] *)),
.entry-footer-narrow :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-lg :where(.entry-footer > :last-child):not(:where([class~="not-prose"] *)),.prose-lg :where(
.entry-footer-narrow > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-xl :where(.entry-footer > ul > li p):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-footer-narrow > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8em;
  margin-bottom: 0.8em;
}

.prose-xl :where(.entry-footer > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-footer-narrow > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.entry-footer > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-footer-narrow > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.entry-footer > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-footer-narrow > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.entry-footer > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-footer-narrow > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.entry-footer > :first-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-footer-narrow > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-xl :where(.entry-footer > :last-child):not(:where([class~="not-prose"] *)),.prose-xl :where(
.entry-footer-narrow > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-2xl :where(.entry-footer > ul > li p):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-footer-narrow > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8333333em;
  margin-bottom: 0.8333333em;
}

.prose-2xl :where(.entry-footer > ul > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-footer-narrow > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.entry-footer > ul > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-footer-narrow > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.entry-footer > ol > li > *:first-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-footer-narrow > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.entry-footer > ol > li > *:last-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-footer-narrow > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.entry-footer > :first-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-footer-narrow > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-2xl :where(.entry-footer > :last-child):not(:where([class~="not-prose"] *)),.prose-2xl :where(
.entry-footer-narrow > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.entry-footer,
.entry-footer-narrow {
  margin-left: auto;
  margin-right: auto;
}

.entry-header,
.entry-content,
.entry-footer {
  max-width: none;
}

.meta-tag {
  display: flex;
  flex-wrap: wrap;
  text-align: center;
}

.meta-info {
  display: flex;
}

.meta-info > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.meta-info {
  font-size: .875rem;
  font-weight: 400;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.meta-info span.posted-on a,
.meta-info span.posted-on a:visited {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.meta-info span.posted-on a:hover,
.meta-info span.posted-on a:focus {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

span.np-hide {
  display: none;
}

@media (min-width: 768px) {
  span.np-hide {
    display: block;
  }
}

.meta-gravatar {
  flex-shrink: 0;
}

.meta-gravatar img.avatar {
  border-radius: 9999px;
}

.np-entry-meta,
.np-entry-meta-narrow,
.np-entry-meta-center {
  margin-top: 1.5rem;
  display: flex;
  align-items: center;
}

.np-entry-meta-center {
  justify-content: center;
}

.np-entry-info {
  margin-left: 0.75rem;
  font-size: .875rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

.np-entry-info span.author a,
.np-entry-info span.author a:visited {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.np-entry-info span.author a:hover,
.np-entry-info span.author a:focus,
a.post-edit-link {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

a.post-edit-link {
  text-decoration-line: none;
}

a.post-edit-link:hover {
  --tw-text-opacity: 1;
  color: rgb(5 150 105 / var(--tw-text-opacity));
}

.post-thumbnail img {
  height: 13rem;
  width: 100%;
  border-radius: 0.5rem;
  -o-object-fit: cover;
     object-fit: cover;
}

@media (min-width: 1024px) {
  .post-thumbnail img {
    height: 15rem;
  }
}

@media (min-width: 768px) {
  .error-404 {
    display: grid;
    place-items: center;
  }

  .no-results {
    display: grid;
    place-items: center;
  }
}

@media (min-width: 640px) {
  .np-page-none-container {
    display: flex;
  }
}

.np-page-none-text {
  font-size: 2.25rem;
  font-weight: 600;
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .np-page-none-text {
    font-size: 3rem;
  }

  .np-page-none-entry {
    margin-left: 1.5rem;
  }
}

.np-search-form-icon-entry {
  position: absolute;
  top: 0px;
  bottom: 0px;
  right: 0px;
  display: flex;
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
  padding-right: 0.375rem;
}

.np-search-form {
  position: relative;
  margin-top: 0.25rem;
  display: flex;
  align-items: center;
}

.search-form {
  display: flex;
  width: 100%;
}

.search-form > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.search-form input.search-field {
  display: block;
  width: 100%;
  border-radius: 0.375rem;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
  padding-right: 3rem;
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.search-form input.search-field:focus {
  --tw-border-opacity: 1;
  border-color: rgb(16 185 129 / var(--tw-border-opacity));
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(16 185 129 / var(--tw-ring-opacity));
}

@media (min-width: 640px) {
  .search-form input.search-field {
    font-size: .875rem;
  }
}

.np-search-form-entry {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.np-page-none-info {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.np-page-none-info :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.np-page-none-info :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.np-page-none-info :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.np-page-none-info :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-page-none-info :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-page-none-info :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-page-none-info :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.np-page-none-info :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.np-page-none-info :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.np-page-none-info :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.np-page-none-info :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.np-page-none-info :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.np-page-none-info :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.np-page-none-info :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.np-page-none-info :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.np-page-none-info :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.np-page-none-info :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.np-page-none-info :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.np-page-none-info :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.np-page-none-info :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.np-page-none-info :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.np-page-none-info :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.np-page-none-info :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.np-page-none-info :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.np-page-none-info :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.np-page-none-info :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.np-page-none-info :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.np-page-none-info :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.np-page-none-info :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.np-page-none-info :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.np-page-none-info :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.np-page-none-info :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.np-page-none-info :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.np-page-none-info :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.np-page-none-info :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.np-page-none-info :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.np-page-none-info :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.np-page-none-info :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-page-none-info :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-page-none-info :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.np-page-none-info :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.np-page-none-info :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-page-none-info :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-page-none-info :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.np-page-none-info :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.np-page-none-info :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.np-page-none-info :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.np-page-none-info :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.np-page-none-info :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.np-page-none-info :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.np-page-none-info :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.np-page-none-info :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.np-page-none-info :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.np-page-none-info :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.np-page-none-info :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.np-page-none-info :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.np-page-none-info {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.np-page-none-info :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.np-page-none-info :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.np-page-none-info :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.np-page-none-info :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.np-page-none-info :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.np-page-none-info :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.np-page-none-info :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.np-page-none-info :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.np-page-none-info :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.np-page-none-info :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.np-page-none-info :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.np-page-none-info :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.np-page-none-info :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.np-page-none-info :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.np-page-none-info :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.np-page-none-info :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.np-page-none-info :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.np-page-none-info :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.np-page-none-info :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.np-page-none-info :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.np-page-none-info :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.np-page-none-info :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.np-page-none-info :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-sm :where(.np-page-none-info > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(.np-page-none-info > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.np-page-none-info > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.np-page-none-info > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.np-page-none-info > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.np-page-none-info > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm :where(.np-page-none-info > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-base :where(.np-page-none-info > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose-base :where(.np-page-none-info > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.np-page-none-info > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.np-page-none-info > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose-base :where(.np-page-none-info > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose-base :where(.np-page-none-info > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-base :where(.np-page-none-info > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-lg :where(.np-page-none-info > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-lg :where(.np-page-none-info > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.np-page-none-info > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.np-page-none-info > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-lg :where(.np-page-none-info > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-lg :where(.np-page-none-info > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-lg :where(.np-page-none-info > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-xl :where(.np-page-none-info > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8em;
  margin-bottom: 0.8em;
}

.prose-xl :where(.np-page-none-info > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.np-page-none-info > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.np-page-none-info > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.np-page-none-info > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.np-page-none-info > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-xl :where(.np-page-none-info > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-2xl :where(.np-page-none-info > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8333333em;
  margin-bottom: 0.8333333em;
}

.prose-2xl :where(.np-page-none-info > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.np-page-none-info > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.np-page-none-info > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.prose-2xl :where(.np-page-none-info > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.prose-2xl :where(.np-page-none-info > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-2xl :where(.np-page-none-info > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.np-page-none-info {
  --tw-prose-links: #059669;
  --tw-prose-invert-links: #10b981;
}

@media (min-width: 640px) {
  .np-page-none-info {
    border-left-width: 1px;
    --tw-border-opacity: 1;
    border-color: rgb(229 231 235 / var(--tw-border-opacity));
    padding-left: 1.5rem;
  }
}

.np-page-none-title {
  margin-bottom: 0px;
  font-size: 2.25rem;
  font-weight: 600;
  letter-spacing: -0.025em;
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .np-page-none-title {
    font-size: 3rem;
  }
}

.np-page-none-description {
  margin-left: auto;
  margin-right: auto;
  margin-top: 0.75rem;
  max-width: 42rem;
  font-size: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .np-page-none-description {
    margin-top: 1rem;
  }
}

.np-related-full,
.np-related-sidebar {
  margin-left: auto;
  margin-right: auto;
  display: grid;
  gap: 1.5rem;
}

@media (min-width: 640px) {
  .np-related-full,
.np-related-sidebar {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (min-width: 1024px) {
  .np-related-full,
.np-related-sidebar {
    max-width: none;
  }
}

@media (min-width: 1280px) {
  .np-related-full {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
}

.np-related-title {
  margin-top: 0.5rem;
  display: block;
  font-size: 1.125rem;
}

.np-related-title a {
  font-weight: 600;
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

.np-related-title a:hover {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.np-related-thumbnail img {
  height: 10rem;
  width: 100%;
  border-radius: 0.5rem;
  -o-object-fit: cover;
     object-fit: cover;
}

.comments-area {
  margin-left: auto;
  margin-right: auto;
  max-width: 42rem;
}

.comments-area > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

.np-layout-content-right .comments-area,
.np-layout-content-left .comments-area {
  max-width: none;
}

.comment-list {
  font-size: 1.125rem;
  line-height: 1.7777778;
}

.comment-list :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}

.comment-list :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  font-size: 1.2222222em;
  line-height: 1.4545455;
  margin-top: 1.0909091em;
  margin-bottom: 1.0909091em;
}

.comment-list :where(blockquote):not(:where([class~="not-prose"] *)) {
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  padding-left: 1em;
}

.comment-list :where(h1):not(:where([class~="not-prose"] *)) {
  font-size: 2.6666667em;
  margin-top: 0;
  margin-bottom: 0.8333333em;
  line-height: 1;
}

.comment-list :where(h2):not(:where([class~="not-prose"] *)) {
  font-size: 1.6666667em;
  margin-top: 1.8666667em;
  margin-bottom: 1.0666667em;
  line-height: 1.3333333;
}

.comment-list :where(h3):not(:where([class~="not-prose"] *)) {
  font-size: 1.3333333em;
  margin-top: 1.6666667em;
  margin-bottom: 0.6666667em;
  line-height: 1.5;
}

.comment-list :where(h4):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.comment-list :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.comment-list :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.comment-list :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}

.comment-list :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.comment-list :where(figcaption):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
  margin-top: 1em;
}

.comment-list :where(code):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
}

.comment-list :where(h2 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.8666667em;
}

.comment-list :where(h3 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.875em;
}

.comment-list :where(pre):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.75;
  margin-top: 2em;
  margin-bottom: 2em;
  border-radius: 0.375rem;
  padding-top: 1em;
  padding-right: 1.5em;
  padding-bottom: 1em;
  padding-left: 1.5em;
}

.comment-list :where(ol):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.comment-list :where(ul):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}

.comment-list :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.6666667em;
  margin-bottom: 0.6666667em;
}

.comment-list :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.comment-list :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.4444444em;
}

.comment-list :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.comment-list :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.comment-list :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.comment-list :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.3333333em;
}

.comment-list :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.3333333em;
}

.comment-list :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.comment-list :where(hr):not(:where([class~="not-prose"] *)) {
  margin-top: 3.1111111em;
  margin-bottom: 3.1111111em;
}

.comment-list :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.comment-list :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.comment-list :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.comment-list :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.comment-list :where(table):not(:where([class~="not-prose"] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
}

.comment-list :where(thead th):not(:where([class~="not-prose"] *)) {
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.comment-list :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.comment-list :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.comment-list :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.75em;
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}

.comment-list :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.comment-list :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.comment-list :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.comment-list :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.comment-list > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}

.comment-list :where(ol):not(:where([class~="not-prose"] *)),
.comment-list :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding: 0px;
}

.comment-list li.trackback a.url,
.comment-list li.pingback a.url {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.comment-list li.trackback a.url:hover,
.comment-list li.pingback a.url:hover {
  --tw-text-opacity: 1;
  color: rgb(5 150 105 / var(--tw-text-opacity));
}

.comment-body {
  border-radius: 0.5rem;
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
  padding: 1rem;
}

@media (min-width: 768px) {
  .comment-author {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0.75rem;
  }
}

.comment-author img {
  margin-top: 0px;
  margin-bottom: 0.5rem;
  height: 3rem;
  width: 3rem;
  border-radius: 0.375rem;
}

.comment-author a {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.comment-author a:hover {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

@media (min-width: 768px) {
  .comment-meta {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
  }
}

.comment-content {
  font-size: 100%;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.comment-content a {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.comment-content a:hover {
  --tw-text-opacity: 1;
  color: rgb(5 150 105 / var(--tw-text-opacity));
}

.reply a,
span.edit-link a {
  border-radius: 0.125rem;
  --tw-bg-opacity: 1;
  background-color: rgb(16 185 129 / var(--tw-bg-opacity));
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  font-size: .875rem;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.reply a:hover,
.reply a:focus,
span.edit-link a:hover,
span.edit-link a:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(5 150 105 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.comment-metadata {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.comment-metadata a,
.comment-metadata a:visited {
  font-size: .875rem;
  font-weight: 400;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.comment-metadata a:hover,
.comment-metadata a:focus {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.comments-title,
.comment-reply-title {
  font-size: 1.25rem;
  font-weight: 600;
  letter-spacing: -0.025em;
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

.comment-reply-title {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: 0.75rem;
}

#cancel-comment-reply-link {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

#cancel-comment-reply-link:hover {
  --tw-text-opacity: 1;
  color: rgb(5 150 105 / var(--tw-text-opacity));
}

.comment-form {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  row-gap: 1.5rem;
}

@media (min-width: 640px) {
  .comment-form {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    -moz-column-gap: 1.5rem;
         column-gap: 1.5rem;
  }
}

.logged-in-as,
.comment-notes {
  margin-top: 1rem;
}

.logged-in-as a {
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.logged-in-as a:hover {
  --tw-text-opacity: 1;
  color: rgb(5 150 105 / var(--tw-text-opacity));
}

span.required-field-message {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

span.required {
  font-size: 1.25rem;
  font-weight: 700;
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .comment-form-comment,
.comment-form-url,
.comment-form-cookies-consent,
.form-submit {
    grid-column: span 2 / span 2;
  }
}

#email-notes,
.required-field-message {
  font-size: 100%;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

#comment label,
#author label,
#email label,
#url label {
  display: block;
  font-size: .875rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

textarea#comment,
input#author,
input#email,
input#url {
  margin-top: 0.25rem;
  display: block;
  width: 100%;
  border-radius: 0.375rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
  background-color: transparent;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: .875rem;
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

textarea#comment:focus,
input#author:focus,
input#email:focus,
input#url:focus {
  --tw-border-opacity: 1;
  border-color: rgb(16 185 129 / var(--tw-border-opacity));
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(16 185 129 / var(--tw-ring-opacity));
}

input#submit.submit {
  display: inline-flex;
  width: 100%;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  border-radius: 0.375rem;
  border-width: 1px;
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: rgb(16 185 129 / var(--tw-bg-opacity));
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  font-size: 100%;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

input#submit.submit:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(5 150 105 / var(--tw-bg-opacity));
}

input#submit.submit:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(16 185 129 / var(--tw-ring-opacity));
  --tw-ring-offset-width: 2px;
}

#wp-comment-cookies-consent {
  height: 1rem;
  width: 1rem;
  border-radius: 0.25rem;
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

#wp-comment-cookies-consent:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(16 185 129 / var(--tw-ring-opacity));
}

.comment-form-comment,
.comment-form-author,
.comment-form-email,
.comment-form-url {
  display: block;
  font-size: .875rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

.comment-form-cookies-consent {
  display: flex;
  align-items: center;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.comment-form-cookies-consent label {
  margin-left: 0.5rem;
}

.np-pagination {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

.navigation {
  border-top-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

.nav-links {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.nav-previous,
.nav-next {
  margin-top: -1px;
  display: flex;
  width: 0px;
  flex: 1 1 0%;
}

.nav-next {
  justify-content: flex-end;
}

.nav-previous svg,
.nav-next svg {
  height: 1.25rem;
  width: 1.25rem;
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

.nav-previous svg {
  margin-right: 0.75rem;
}

.nav-next svg {
  margin-left: 0.75rem;
}

.nav-previous a,
.nav-next a {
  display: inline-flex;
  align-items: center;
  border-top-width: 1px;
  border-color: transparent;
  padding-top: 1rem;
  font-size: .875rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.nav-previous a:hover,
.nav-next a:hover {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

@media (min-width: 768px) {
  .pagination > .nav-links .nav-previous a,
.pagination > .nav-links .nav-next a {
    margin-top: -1rem;
  }
}

.page-numbers-container {
  display: none;
  align-items: center;
  font-size: .875rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.page-numbers-container:hover {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

@media (min-width: 768px) {
  .page-numbers-container {
    margin-top: -1px;
    display: block;
  }
}

.page-numbers {
  display: inline-flex;
  align-items: center;
  padding: 1rem;
  font-size: .875rem;
  font-weight: 500;
}

a.page-numbers {
  border-top-width: 1px;
  border-color: transparent;
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

a.page-numbers:hover {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

span.page-numbers.current {
  border-top-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(16 185 129 / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

span.page-numbers.dots {
  border-color: transparent;
  --tw-text-opacity: 1;
  color: rgb(16 185 129 / var(--tw-text-opacity));
}

.nav-subtitle {
  display: inline-flex;
  align-items: center;
}